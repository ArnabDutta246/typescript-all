### Here I try to make a collection of all typescript basic to advance with some example
    this is only for self learing nothing else


## Webpack setup     
-------------------------------------
| 1. project init                   |
|   ==> all initiation              |
|   ==> webpack config file         |
-------------------------------------
In this project I try to use webpack for bundleing this `.ts` files

  a. initiate .ts config file by run command
    ``` 
    tsc --init
    ```
  b. init package.json
    ```
    npm init
    ```
  c. install typescript and webpack  
    ```
    npm install webpack webpack-cli ts-loader typescript -D
    ```
  d. ** initiate `webpack.config.js` file 

      ```
      const path = require("path");

      module.exports = {
        entry: "./src/index.ts",
        module: {
          rules: [
            {
              test: /\.ts$/,
              use: "ts-loader",
              include: [path.resolve(__dirname, "src")],
            },
          ],
        },
        output: {
          filename: "bundle.js",
          path: path.resolve(__dirname, "public"),
        },
      };

      ```

      inside `package.json` file 
      ```
      "scripts": {
        "build": "webpack",
      },
      ```
  e. run this after writing and ts code inside index.ts
    ```
    npm run build
    ```    
-------------------------------------
| 2. webpack dev server setup       |
|   ==> open in browser             |
|   ==> live reload                 |
-------------------------------------  

  a. For live servering running during the development have to install `webpack-dev-server` package

    ```
    npm install webpack-dev-server -D 
    ```
    then inside the `package.json` file insert another scripts
    ```
    "scripts":{
      "serve": "webpack serve"
    }

    now run the serve comman what `npm run serve`

   b. for re-building in every changes and also running webpack-serve-dev inside webpack.config.js file in output object have to add new property 
   
   ```
   output:{
   publicPath:'public'
   }
   ```

   by doing this webpack dev server know where to serve the code in memory from 

-------------------------------------------------------
| 3. How to bundle up seperate modules at a time      |
|   ==> Using ES6 Modules                             |
|   ==> live reload                                   |
------------------------------------------------------- 

  a. for enable this webpack to render or bundle typescript modules files `import / export ` inside webpack.config.ts add new object

    ```
    resolve:{
      extensions:['.ts','.js']
    } 
    ```
-------------------------------------------------------
| 4. For easy debug purpose add source-map            |
|   ==> eval-source-map                               |
|   ==> source-map                                    |
------------------------------------------------------- 

  As `bundle.js` is totally unreadable after build by the webpack package it is difficult to debug the code. for rid of this problem add `devtool: "eval-source-map",` in module.export ( webpack.config.js )
    ```
    module.exports = {
      devtool: "eval-source-map",
    }
    ```

-------------------------------------------------------
| 4. Mode Production / devemopmet                     |
|   ==> mode:'development'                            |
|   ==> mode:'development'                             |
------------------------------------------------------- 
    ```
    module.exports = {
      mode:'development' or mode:'development'
    }
    ```



    --------------------------------
    |  ref links:                  |
    --------------------------------
    1. https://stackoverflow.com/questions/40379139/cannot-find-module-webpack-bin-config-yargs

    2. Webpack - devtool source-map VS eval-source-map
    visit: https://stackoverflow.com/questions/51266222/webpack-devtool-source-map-vs-eval-source-map